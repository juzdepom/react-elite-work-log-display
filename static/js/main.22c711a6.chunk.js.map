{"version":3,"sources":["components/Entry.js","components/clients/AsFamous.js","components/clients/EliteWeb.js","components/clients/JungleDojo.js","App.js","airtableIds.js","methods.js","index.js"],"names":["Entry","entry","key","fields","date","minutes","tag","description","AsFamous","EliteWeb","JungleDojo","base","Airtable","apiKey","App","useState","entries","setEntries","useEffect","select","view","eachPage","records","fetchNextPage","totalTimeWorked","length","forEach","hours","Math","round","remainderMinutes","calculateTotalMinutesWorked","style","textAlign","fontFamily","borderBottom","paddingBottom","to","path","element","map","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAEe,SAASA,EAAT,KAAgC,IAAhBC,EAAe,EAAfA,MAASC,EAAM,EAANA,IACpC,OACI,gCACA,gDAASD,EAAME,OAAOC,KAAtB,OACA,gDAASH,EAAME,OAAOE,QAAtB,kBACA,+BAAM,kCAAKJ,EAAME,OAAOG,SACxB,uBACA,+BAAM,4BAAIL,EAAME,OAAOI,gBACvB,uBACA,yBAPUL,GCFH,SAASM,IACpB,OACI,8BACI,8CCHG,SAASC,IACpB,OACI,8BACI,6CCHG,SAASC,IACpB,OACI,8BACI,+C,kBCYNC,EAAO,IAAIC,IAAS,CAAEC,OChBN,sBDgBwBF,KCjBxB,qBDsEPG,MAnDf,WAEE,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAGAC,qBAAU,WAETP,EAAK,WACFQ,OAAO,CAAEC,KAAM,cACfC,UAAS,SAACC,EAASC,GAClBN,EAAWK,GACXC,SAEF,IAEH,IAAIC,EElCC,SAAqCR,GAExC,GAAGA,EAAQS,OAAS,EAAE,CACpB,IAAIpB,EAAU,EACdW,EAAQU,SAAQ,SAACzB,GACfI,GAAWJ,EAAME,OAAOE,WAG1B,IAAIsB,EAAQC,KAAKC,MAAMxB,EAAU,IAC7ByB,EAAmBzB,EAAU,GAEjC,MADU,UAAMsB,EAAN,kBAAqBG,EAArB,SFwBQC,CAA4Bf,GAGlD,OACE,sBAAKgB,MAAO,CAACC,UAAW,SAAUC,WAAY,wBAA9C,UACE,sBACEF,MAAO,CACLG,aAAc,YACdC,cAAe,QAHnB,UAMI,cAAC,IAAD,CAAMC,GAAG,SAAT,uBANJ,KAMyC,IACrC,cAAC,IAAD,CAAMA,GAAG,YAAT,wBAPJ,KAO6C,IACzC,cAAC,IAAD,CAAMA,GAAG,cAAT,yBAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,SAASC,QAAS,cAAC9B,EAAD,MAC9B,cAAC,IAAD,CAAO6B,KAAK,YAAYC,QAAS,cAAC/B,EAAD,MACjC,cAAC,IAAD,CAAO8B,KAAK,cAAcC,QAAS,cAAC7B,EAAD,YAIzC,sDACA,oDAAuBc,EACvB,0BAGA,6CAEAR,EAAQwB,KAAI,SAACvC,EAAOwC,GAAR,OACV,cAACzC,EAAD,CAAOC,MAAOA,GAAYwC,UG3DlCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACA,cAAC,EAAD,QAGFC,SAASC,eAAe,U","file":"static/js/main.22c711a6.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Entry({entry}, {key}) {\n    return (\n        <div key={key}>\n        <span>üóì{entry.fields.date} </span>\n        <span>üïê{entry.fields.minutes} min ‚Äì </span>\n        <span><i>#{entry.fields.tag}</i></span>\n        <br/>\n        <span><i>{entry.fields.description}</i></span>\n        <br/>\n        <br/>\n      </div>\n    )\n}\n\n","import React from 'react'\n\nexport default function AsFamous() {\n    return (\n        <div>\n            <h1>A's Famous</h1>\n        </div>\n    )\n}\n\n","import React from 'react'\n\nexport default function EliteWeb() {\n    return (\n        <div>\n            <h1>Elite Web</h1>\n        </div>\n    )\n}","import React from 'react'\n\nexport default function JungleDojo() {\n    return (\n        <div>\n            <h1>Jungle Dojo</h1>\n        </div>\n    )\n}","import { apiKey, baseId } from \"./airtableIds\";\nimport { calculateTotalMinutesWorked } from \"./methods\"\nimport React, { useEffect, useState } from \"react\";\nimport Airtable from \"airtable\";\n\nimport Entry from \"./components/Entry\";\nimport AsFamous from \"./components/clients/AsFamous\";\nimport EliteWeb from \"./components/clients/EliteWeb\";\nimport JungleDojo from \"./components/clients/JungleDojo\";\n\nimport {\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n//AIRTABLE\nconst base = new Airtable({ apiKey: apiKey }).base(baseId);\n\nfunction App() {\n\n  const [entries, setEntries] = useState([]);\n\n  //this method pulls in the data from airtable\n  useEffect(() => {\n   //pull in the 'goals' table view data\n   base(\"entries\")\n     .select({ view: \"Grid view\" })\n     .eachPage((records, fetchNextPage) => { \n       setEntries(records);\n       fetchNextPage();\n     });\n  }, []);\n\n  let totalTimeWorked = calculateTotalMinutesWorked(entries) // will return a string\n\n\n  return (\n    <div style={{textAlign: \"center\", fontFamily: \"'Roboto', sans-serif\"}}>\n      <nav\n        style={{\n          borderBottom: \"solid 1px\",\n          paddingBottom: \"1rem\"\n        }}\n        >\n          <Link to=\"/elite\">Elite Web</Link> |{\" \"}\n          <Link to=\"/asfamous\">A's Famous</Link> |{\" \"}\n          <Link to=\"/jungledojo\">Jungle Dojo</Link>\n\n          <Routes>\n            <Route path=\"/elite\" element={<EliteWeb/>}></Route>\n            <Route path=\"/asfamous\" element={<AsFamous/>}></Route>\n            <Route path=\"/jungledojo\" element={<JungleDojo/>}></Route>\n          </Routes>\n      </nav>\n\n      <h1>ELITEWEB.Co Work Log</h1>\n      <p>Total time worked: {totalTimeWorked}  \n      <br/>\n      </p>\n      \n      <h3>All Entries</h3>\n      {\n      entries.map((entry, index) => (\n        <Entry entry={entry} key={index}/>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","export const baseId = \"appK6UP7c61WkknOL\"\nexport const apiKey = \"key9YOWPfufxQsX9x\"","export function calculateTotalMinutesWorked(entries){ // will return a string\n    //note: entries will be an object\n    if(entries.length > 0){ //note: this method isn't async so it's called when entries object is still empty; this if statement takes care of that\n      let minutes = 0\n      entries.forEach((entry) => { \n        minutes += entry.fields.minutes\n      })\n      //convert minutes to hours and minutes\n      let hours = Math.round(minutes / 60)\n      let remainderMinutes = minutes % 60\n      let string = `${hours} hours ${remainderMinutes} min`\n      return string\n    }\n  }\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}